package problem.moo.wfg.transformations;

import org.junit.jupiter.api.Test;
import random.IRandom;
import random.MersenneTwister64;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * Various tests for implementations of {@link ITransformation}.
 *
 * @author MTomczyk
 */
class AbstractTransformationTest
{

    /**
     * Tests for polynomial bias.
     */
    @Test
    public void b_poly()
    {
        double[] v = {0.5d, 0.1d, 1.0d, 0.0d};
        double[] a1 = {Math.pow(v[0], 2.0d),
                Math.pow(v[1], 2.0d),
                Math.pow(v[2], 2.0d),
                Math.pow(v[3], 2.0d)};
        double[] a2 = {Math.pow(v[0], 3.0d),
                Math.pow(v[1], 3.0d),
                Math.pow(v[2], 3.0d),
                Math.pow(v[3], 3.0d)};

        for (int i = 0; i < 4; i++)
        {
            String a = String.format("%.5f", a1[i]);
            String b = String.format("%.5f", Transformations.b_poly(v[i], 2.0d));
            assertEquals(a, b);
        }

        for (int i = 0; i < 4; i++)
        {
            String a = String.format("%.5f", a2[i]);
            String b = String.format("%.5f", Transformations.b_poly(v[i], 3.0d));
            assertEquals(a, b);
        }
    }

    /**
     * Tests for flat bias.
     */
    @Test
    public void b_flat()
    {
        double[][] v =
                {
                        {0, 0},
                        {0.01, 0.015},
                        {0.02, 0.03},
                        {0.03, 0.045},
                        {0.04, 0.06},
                        {0.05, 0.075},
                        {0.06, 0.09},
                        {0.07, 0.105},
                        {0.08, 0.12},
                        {0.09, 0.135},
                        {0.1, 0.15},
                        {0.11, 0.165},
                        {0.12, 0.18},
                        {0.13, 0.195},
                        {0.14, 0.21},
                        {0.15, 0.225},
                        {0.16, 0.24},
                        {0.17, 0.255},
                        {0.18, 0.27},
                        {0.19, 0.285},
                        {0.2, 0.3},
                        {0.21, 0.3},
                        {0.22, 0.3},
                        {0.23, 0.3},
                        {0.24, 0.3},
                        {0.25, 0.3},
                        {0.26, 0.3},
                        {0.27, 0.3},
                        {0.28, 0.3},
                        {0.29, 0.3},
                        {0.3, 0.3},
                        {0.31, 0.3},
                        {0.32, 0.3},
                        {0.33, 0.3},
                        {0.34, 0.3},
                        {0.35, 0.3},
                        {0.36, 0.3},
                        {0.37, 0.3},
                        {0.38, 0.3},
                        {0.39, 0.3},
                        {0.4, 0.3},
                        {0.41, 0.3},
                        {0.42, 0.3},
                        {0.43, 0.3},
                        {0.44, 0.3},
                        {0.45, 0.3},
                        {0.46, 0.3},
                        {0.47, 0.3},
                        {0.48, 0.3},
                        {0.49, 0.3},
                        {0.5, 0.3},
                        {0.51, 0.314},
                        {0.52, 0.328},
                        {0.53, 0.342},
                        {0.54, 0.356},
                        {0.55, 0.37},
                        {0.56, 0.384},
                        {0.57, 0.398},
                        {0.58, 0.412},
                        {0.59, 0.426},
                        {0.6, 0.44},
                        {0.61, 0.454},
                        {0.62, 0.468},
                        {0.63, 0.482},
                        {0.64, 0.496},
                        {0.65, 0.51},
                        {0.66, 0.524},
                        {0.67, 0.538},
                        {0.68, 0.552},
                        {0.69, 0.566},
                        {0.7, 0.58},
                        {0.71, 0.594},
                        {0.72, 0.608},
                        {0.73, 0.622},
                        {0.74, 0.636},
                        {0.75, 0.65},
                        {0.76, 0.664},
                        {0.77, 0.678},
                        {0.78, 0.692},
                        {0.79, 0.706},
                        {0.8, 0.72},
                        {0.81, 0.734},
                        {0.82, 0.748},
                        {0.83, 0.762},
                        {0.84, 0.776},
                        {0.85, 0.79},
                        {0.86, 0.804},
                        {0.87, 0.818},
                        {0.88, 0.832},
                        {0.89, 0.846},
                        {0.9, 0.86},
                        {0.91, 0.874},
                        {0.92, 0.888},
                        {0.93, 0.902},
                        {0.94, 0.916},
                        {0.95, 0.93},
                        {0.96, 0.944},
                        {0.97, 0.958},
                        {0.98, 0.972},
                        {0.99, 0.986},
                        {1, 1},

                };

        for (double[] aV : v)
        {
            String a = String.format("%.5f", aV[1]);
            String b = String.format("%.5f", Transformations.b_flat(aV[0], 0.3d, 0.2d, 0.5d));
            assertEquals(a, b);
        }
    }

    /**
     * Tests for linear shift.
     */
    @Test
    public void s_linear()
    {
        double[][] v =
                {
                        {0, 1},
                        {0.01, 0.975},
                        {0.02, 0.95},
                        {0.03, 0.925},
                        {0.04, 0.9},
                        {0.05, 0.875},
                        {0.06, 0.85},
                        {0.07, 0.825},
                        {0.08, 0.8},
                        {0.09, 0.775},
                        {0.1, 0.75},
                        {0.11, 0.725},
                        {0.12, 0.7},
                        {0.13, 0.675},
                        {0.14, 0.65},
                        {0.15, 0.625},
                        {0.16, 0.6},
                        {0.17, 0.575},
                        {0.18, 0.55},
                        {0.19, 0.525},
                        {0.2, 0.5},
                        {0.21, 0.475},
                        {0.22, 0.45},
                        {0.23, 0.425},
                        {0.24, 0.4},
                        {0.25, 0.375},
                        {0.26, 0.35},
                        {0.27, 0.325},
                        {0.28, 0.3},
                        {0.29, 0.275},
                        {0.3, 0.25},
                        {0.31, 0.225},
                        {0.32, 0.2},
                        {0.33, 0.175},
                        {0.34, 0.15},
                        {0.35, 0.125},
                        {0.36, 0.1},
                        {0.37, 0.075},
                        {0.38, 0.05},
                        {0.39, 0.025},
                        {0.4, 0},
                        {0.41, 0.016666667},
                        {0.42, 0.033333333},
                        {0.43, 0.05},
                        {0.44, 0.066666667},
                        {0.45, 0.083333333},
                        {0.46, 0.1},
                        {0.47, 0.116666667},
                        {0.48, 0.133333333},
                        {0.49, 0.15},
                        {0.5, 0.166666667},
                        {0.51, 0.183333333},
                        {0.52, 0.2},
                        {0.53, 0.216666667},
                        {0.54, 0.233333333},
                        {0.55, 0.25},
                        {0.56, 0.266666667},
                        {0.57, 0.283333333},
                        {0.58, 0.3},
                        {0.59, 0.316666667},
                        {0.6, 0.333333333},
                        {0.61, 0.35},
                        {0.62, 0.366666667},
                        {0.63, 0.383333333},
                        {0.64, 0.4},
                        {0.65, 0.416666667},
                        {0.66, 0.433333333},
                        {0.67, 0.45},
                        {0.68, 0.466666667},
                        {0.69, 0.483333333},
                        {0.7, 0.5},
                        {0.71, 0.516666667},
                        {0.72, 0.533333333},
                        {0.73, 0.55},
                        {0.74, 0.566666667},
                        {0.75, 0.583333333},
                        {0.76, 0.6},
                        {0.77, 0.616666667},
                        {0.78, 0.633333333},
                        {0.79, 0.65},
                        {0.8, 0.666666667},
                        {0.81, 0.683333333},
                        {0.82, 0.7},
                        {0.83, 0.716666667},
                        {0.84, 0.733333333},
                        {0.85, 0.75},
                        {0.86, 0.766666667},
                        {0.87, 0.783333333},
                        {0.88, 0.8},
                        {0.89, 0.816666667},
                        {0.9, 0.833333333},
                        {0.91, 0.85},
                        {0.92, 0.866666667},
                        {0.93, 0.883333333},
                        {0.94, 0.9},
                        {0.95, 0.916666667},
                        {0.96, 0.933333333},
                        {0.97, 0.95},
                        {0.98, 0.966666667},
                        {0.99, 0.983333333},
                        {1, 1},
                };

        for (double[] aV : v)
        {
            String a = String.format("%.5f", aV[1]);
            String b = String.format("%.5f", Transformations.s_linear(aV[0], 0.4d));
            assertEquals(a, b);
        }
    }

    /**
     * Tests for deceptive shift.
     */
    @Test
    public void s_deceptive()
    {
        double[][] v =
                {
                        {0, 0.4},
                        {0.01, 0.42},
                        {0.02, 0.44},
                        {0.03, 0.46},
                        {0.04, 0.48},
                        {0.05, 0.5},
                        {0.06, 0.52},
                        {0.07, 0.54},
                        {0.08, 0.56},
                        {0.09, 0.58},
                        {0.1, 0.6},
                        {0.11, 0.62},
                        {0.12, 0.64},
                        {0.13, 0.66},
                        {0.14, 0.68},
                        {0.15, 0.7},
                        {0.16, 0.72},
                        {0.17, 0.74},
                        {0.18, 0.76},
                        {0.19, 0.78},
                        {0.2, 0.8},
                        {0.21, 0.82},
                        {0.22, 0.84},
                        {0.23, 0.86},
                        {0.24, 0.88},
                        {0.25, 0.9},
                        {0.26, 0.92},
                        {0.27, 0.94},
                        {0.28, 0.96},
                        {0.29, 0.98},
                        {0.3, 1},
                        {0.31, 0.95},
                        {0.32, 0.9},
                        {0.33, 0.85},
                        {0.34, 0.8},
                        {0.35, 0.75},
                        {0.36, 0.7},
                        {0.37, 0.65},
                        {0.38, 0.6},
                        {0.39, 0.55},
                        {0.4, 0.5},
                        {0.41, 0.45},
                        {0.42, 0.4},
                        {0.43, 0.35},
                        {0.44, 0.3},
                        {0.45, 0.25},
                        {0.46, 0.2},
                        {0.47, 0.15},
                        {0.48, 0.1},
                        {0.49, 0.05},
                        {0.5, 0},
                        {0.51, 0.05},
                        {0.52, 0.1},
                        {0.53, 0.15},
                        {0.54, 0.2},
                        {0.55, 0.25},
                        {0.56, 0.3},
                        {0.57, 0.35},
                        {0.58, 0.4},
                        {0.59, 0.45},
                        {0.6, 0.5},
                        {0.61, 0.55},
                        {0.62, 0.6},
                        {0.63, 0.65},
                        {0.64, 0.7},
                        {0.65, 0.75},
                        {0.66, 0.8},
                        {0.67, 0.85},
                        {0.68, 0.9},
                        {0.69, 0.95},
                        {0.7, 1},
                        {0.71, 0.98},
                        {0.72, 0.96},
                        {0.73, 0.94},
                        {0.74, 0.92},
                        {0.75, 0.9},
                        {0.76, 0.88},
                        {0.77, 0.86},
                        {0.78, 0.84},
                        {0.79, 0.82},
                        {0.8, 0.8},
                        {0.81, 0.78},
                        {0.82, 0.76},
                        {0.83, 0.74},
                        {0.84, 0.72},
                        {0.85, 0.7},
                        {0.86, 0.68},
                        {0.87, 0.66},
                        {0.88, 0.64},
                        {0.89, 0.62},
                        {0.9, 0.6},
                        {0.91, 0.58},
                        {0.92, 0.56},
                        {0.93, 0.54},
                        {0.94, 0.52},
                        {0.95, 0.5},
                        {0.96, 0.48},
                        {0.97, 0.46},
                        {0.98, 0.44},
                        {0.99, 0.42},
                        {1, 0.4},


                };

        for (double[] aV : v)
        {

            String a = String.format("%.5f", aV[1]);
            String b = String.format("%.5f", Transformations.s_deceptive(aV[0], 0.5d, 0.2d, 0.4d));
            assertEquals(a, b);
        }
    }

    /**
     * Tests for multimodal shift.
     */
    @Test
    public void s_multi()
    {
        double[][] v =
                {
                        {0, 1},
                        {0.01, 0.93329905},
                        {0.02, 0.774222222},
                        {0.03, 0.562},
                        {0.04, 0.350222222},
                        {0.05, 0.192478727},
                        {0.06, 0.128},
                        {0.07, 0.171145394},
                        {0.08, 0.307555556},
                        {0.09, 0.498},
                        {0.1, 0.688888889},
                        {0.11, 0.826632384},
                        {0.12, 0.872},
                        {0.13, 0.810632384},
                        {0.14, 0.656888889},
                        {0.15, 0.45},
                        {0.16, 0.243555556},
                        {0.17, 0.091145394},
                        {0.18, 0.032},
                        {0.19, 0.080478727},
                        {0.2, 0.222222222},
                        {0.21, 0.418},
                        {0.22, 0.614222222},
                        {0.23, 0.75729905},
                        {0.24, 0.808},
                        {0.25, 0.751965717},
                        {0.26, 0.603555556},
                        {0.27, 0.402},
                        {0.28, 0.200888889},
                        {0.29, 0.053812061},
                        {0.3, 0},
                        {0.31, 0.010069651},
                        {0.32, 0.039775718},
                        {0.33, 0.087634754},
                        {0.34, 0.15125714},
                        {0.35, 0.227466913},
                        {0.36, 0.312461014},
                        {0.37, 0.402},
                        {0.38, 0.491620618},
                        {0.39, 0.576859618},
                        {0.4, 0.653477553},
                        {0.41, 0.717671368},
                        {0.42, 0.766265098},
                        {0.43, 0.796869124},
                        {0.44, 0.808},
                        {0.45, 0.799154838},
                        {0.46, 0.770836527},
                        {0.47, 0.724528511},
                        {0.48, 0.662620411},
                        {0.49, 0.58828819},
                        {0.5, 0.505334904},
                        {0.51, 0.418},
                        {0.52, 0.330746728},
                        {0.53, 0.248038341},
                        {0.54, 0.174114283},
                        {0.55, 0.112777611},
                        {0.56, 0.06720429},
                        {0.57, 0.039783937},
                        {0.58, 0.032},
                        {0.59, 0.044355366},
                        {0.6, 0.076347147},
                        {0.61, 0.126491897},
                        {0.62, 0.192399998},
                        {0.63, 0.270895484},
                        {0.64, 0.3581753},
                        {0.65, 0.45},
                        {0.66, 0.541906333},
                        {0.67, 0.629431047},
                        {0.68, 0.708334696},
                        {0.69, 0.774814226},
                        {0.7, 0.82569367},
                        {0.71, 0.85858341},
                        {0.72, 0.872},
                        {0.73, 0.865440553},
                        {0.74, 0.839407955},
                        {0.75, 0.795385654},
                        {0.76, 0.735763268},
                        {0.77, 0.663716761},
                        {0.78, 0.58304919},
                        {0.79, 0.498},
                        {0.8, 0.413032443},
                        {0.81, 0.33260977},
                        {0.82, 0.260971426},
                        {0.83, 0.201920468},
                        {0.84, 0.158632861},
                        {0.85, 0.133498223},
                        {0.86, 0.128},
                        {0.87, 0.14264108},
                        {0.88, 0.176918575},
                        {0.89, 0.22934904},
                        {0.9, 0.297542855},
                        {0.91, 0.378324055},
                        {0.92, 0.467889586},
                        {0.93, 0.562},
                        {0.94, 0.656192047},
                        {0.95, 0.746002475},
                        {0.96, 0.827191839},
                        {0.97, 0.895957083},
                        {0.98, 0.949122241},
                        {0.99, 0.984297695},
                        {1, 1},


                };

        for (double[] aV : v)
        {

            String a = String.format("%.5f", aV[1]);
            String b = String.format("%.5f", Transformations.s_multi(aV[0], 2, 0.5d, 0.3d));
            assertEquals(a, b);
        }
    }

    /**
     * Tests for sum shift.
     */
    @Test
    public void s_sum()
    {
        double[] v = {0.1, 0.2, 0.3};
        double[] y = {0.7, 0.1, 0.2};

        double sum = Transformations.r_sum(y, v);

        String a = String.format("%.5f", sum);
        String b = String.format("%.5f", 0.25d);
        assertEquals(a, b);

    }

    /**
     * Tests for nonseparability reduction.
     */
    @Test
    public void r_nonseparability()
    {
        IRandom R = new MersenneTwister64(0);
        for (int j = 0; j < 100; j++)
        {
            double[] y = new double[10];
            double[] w = new double[10];

            for (int i = 0; i < 10; i++)
            {
                y[i] = R.nextDouble();
                w[i] = 1.0d;
            }

            double a = Transformations.r_nonseparability(y, 1);
            double b = Transformations.r_sum(y, w);
            assertEquals(a, b, 0.000001d);
        }
    }
}